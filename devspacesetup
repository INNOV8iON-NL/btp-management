#!/usr/bin/env bash
# shellcheck disable=SC2016

# A convenience script for the hands-on content author to quickly set up the Dev Space
# following the instructions in each exercise, and also to reset the Dev Space.

# Reset: bash devspacesetup reset
# Set up: source ./devspacesetup

declare SERVERURL=https://cpcli.cf.eu10.hana.ondemand.com
declare ACCOUNT=8fe7efd4trial
declare SUBDOMAIN=8fe7efd4trial-ga
declare USER=qmacro+blue@gmail.com

declare servicename=cis-central
declare servicekeyname=cis-central-sk

declare region=eu10
declare btpsubname=ho060-subaccount
declare btpdirname=ho060-directory

usage() {

  echo "Reset: bash devspacesetup reset"
  echo "Setup: source devspacesetup setup [exercise number]"

}

reset() {

  local subaccountguid directoryguid

  read -p "Ensure you're logged on with cf and btp first ..."

  cf dsk -f "$servicename" "$servicekeyname"
  cf ds -f "$servicename"

  subaccountguid="$(/home/user/projects/HO060/exercises/05-btp-guids-cli-in-practice/btpguid "$btpsubname")"
  directoryguid="$(/home/user/projects/HO060/exercises/05-btp-guids-cli-in-practice/btpguid "$btpdirname")"
  btp delete accounts/subaccount "$subaccountguid" --confirm
  sleep 5
  btp delete accounts/directory "$directoryguid" --confirm

  rm /home/user/getbtpcli 2>/dev/null
  rm -rf "/home/user/bin/"
  rm -rf "/home/user/.config/btp/"
  rm -rf "/home/user/.config/.btp/"
  rm -rf "/home/user/projects/HO060/"

  sed -i '/^export PATH=$PATH:$HOME\/bin/d' "$HOME/.bashrc"
  sed -i '/^export BTP_CLIENTCONFIG=$HOME\/.config\/btp\/config.json/d' "$HOME/.bashrc"

}

exercise_6() {

  curl \
    --silent \
    --location \
    --url https://github.com/koalaman/shellcheck/releases/download/v0.8.0/shellcheck-v0.8.0.linux.x86_64.tar.xz \
    | tar \
        --extract \
        --directory $HOME/bin/ \
        --xz \
        --file - \
        --strip-components 1 \
        --wildcards \
        */shellcheck

  cd $HOME/projects/HO060/exercises/06-writing-your-first-script/
  cp script-template my-get-cf-api-endpoint
  
}

exerciselist() {

  # If an exercise number is specified, just return that one
  local ex=$1

  declare -F \
    | awk "/exercise_$ex/ { print \$3 }"

}

exercise_1() {

  echo "Retrieving and installing the btp CLI"
  curl \
    --remote-name \
    --location \
    --url "https://raw.githubusercontent.com/SAP-samples/sap-tech-bytes/2021-09-01-btp-cli/getbtpcli" \
    && chmod +x getbtpcli

  ./getbtpcli

  echo 'export PATH=$PATH:$HOME/bin' >> "$HOME/.bashrc"
  export PATH=$PATH:$HOME/bin

}

exercise_2() {

  echo "Executing 'btp login'"
  btp login \
    --url "$SERVERURL" \
    --subdomain "$SUBDOMAIN" \
    --user "$USER"

  set +o errexit
  btp target --subaccount "$(btp --format json list accounts/subaccount 2> /dev/null | jq -r '.value[] | select(.displayName == "trial") | .guid')"
  set -o errexit
  mv "$HOME/.config/.btp/" "$HOME/.config/btp/" 2> /dev/null

  echo 'export BTP_CLIENTCONFIG=$HOME/.config/btp/config.json' >> "$HOME/.bashrc"
  export BTP_CLIENTCONFIG=$HOME/.config/btp/config.json

}

exercise_3() {

  echo "Setting up autocomplete"
  btp enable autocomplete bash
  # shellcheck disable=SC1090
  export SAP_BTP_CLI_AUTOCOMPLETE="/home/user/.config/btp/autocomplete/scripts/sapbtpcli-autocomplete.plugin.sh" && source "$SAP_BTP_CLI_AUTOCOMPLETE"

}

exercise_4() {

  cd "$HOME/projects/" && git clone https://github.tools.sap/dkom2022/HO060.git
  cd "$HOME/projects/HO060/exercises/04-json-format-and-apis" || :
  cf login -a "$(./get_cf_api_endpoint)"
  cf create-service cis central "$servicename"
  cf create-service-key "$servicename" "$servicekeyname"
  cf service-key "$servicename" "$servicekeyname" | sed '1,2d' > "${servicekeyname}.json"
  ./generate-password-grant-type "${servicekeyname}.json" > tokendata.json
  ./call-entitlements-service-regions-api cis-central-sk.json tokendata.json | jq .

}

exercise_5() {

  echo "alias trunc='cut -c1-\$(tput cols)'" >> "$HOME/.bashrc"
  alias trunc='cut -c1-$(tput cols)'
  btp create accounts/directory --display-name "$btpdirname"
  ln -s "$HOME/projects/HO060/exercises/05-btp-guids-cli-in-practice/btpguid" "$HOME/bin/btpguid"
  btp create accounts/subaccount \
    --directory "$(btpguid "$btpdirname")" \
    --display-name "$btpsubname" \
    --region "$region" \
    --subdomain "ho060-$(btp --format json get accounts/global-account | jq -r .displayName)"

  curl \
    --silent \
    --location \
    --url "https://github.com/junegunn/fzf/releases/download/0.29.0/fzf-0.29.0-linux_amd64.tar.gz" \
    | tar -C $HOME/bin/ -xzf - fzf
  
  selectregion() {
    btp --format json list accounts/available-regions \
    | jq -r '.datacenters[] | "\(.region)\t\(.displayName)"' \
    | fzf --color=light \
    | cut -f 1
  }

}

main() {

  set -o errexit
  set -o pipefail

  if [[ $1 == reset ]]; then

    reset

  elif [[ $1 == setup ]]; then

    for ex in $(exerciselist "$2"); do
      "$ex"
    done

  else 

    usage

  fi

  set +o errexit
  set +o pipefail

}


main "$@"
